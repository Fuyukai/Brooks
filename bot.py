# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

"""
Brooks twitter bot - tweets a list of tweets as generated by the GPT2-simple package regularly.
"""
from __future__ import annotations

import json
import pathlib
import random
import time
import traceback
from dataclasses import dataclass
from typing import List

import tweepy
from tweepy import API

#: The number of seconds to sleep between tweets.
SLEEP_TIME = 60 * 25


@dataclass
class Bot:
    name: str
    path: pathlib.Path
    tweets: List[str]
    api: API


bots: List[Bot] = []
BOT_DIR = pathlib.Path("./bots")

for directory in BOT_DIR.iterdir():
    config_path = directory / "bot.json"
    config_data = json.loads(config_path.read_text())
    name = directory.name

    auth = tweepy.OAuthHandler(config_data["api_key"], config_data["secret_key"])
    auth.set_access_token(config_data["token"], config_data["secret_token"])

    api = API(auth, wait_on_rate_limit=True)
    api.verify_credentials()
    print(f"Verified credentials for {name}")

    # load checkpoint, if any
    checkpoint = directory / "checkpoint.json"
    if checkpoint.exists():
        tweets = json.loads(checkpoint.read_text())
        print(f"Loaded {len(tweets)} from checkpoint for bot {name}.")

    else:
        # load tweet lists
        with (directory / "tweetlist.txt").open() as f:
            tweets = data = f.read().split("====================")
            tweets = [i.lstrip().rstrip() for i in data if 0 < len(i) < 280]
            print(f"Loaded {len(tweets)} tweets for bot {name}")

    bot = Bot(name=name, path=directory, api=api, tweets=tweets)
    bots.append(bot)

print()
while True:
    for bot in bots:
        tweets = bot.tweets

        chosen_idx = random.randint(0, len(tweets) - 1)
        chosen_tweet = tweets.pop(chosen_idx)
        print(f"Tweeting for bot {bot.name}.")
        print(f"Chosen tweet: `{chosen_tweet}`")
        print(f"There are {len(tweets)} tweets left.")
        try:
            bot.api.update_status(status=chosen_tweet)
        except:
            traceback.print_exc()
        finally:
            print(f"Saving checkpoint for bot {bot.name}.")
            checkpoint_file = bot.path / "checkpoint.json"
            checkpoint = json.dumps(tweets)
            checkpoint_file.write_text(checkpoint)

        print("\n==== ==== ====\n")

    print(f"Sleeping for {SLEEP_TIME} seconds")
    time.sleep(SLEEP_TIME)
